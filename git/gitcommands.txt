git help <Command name> WILL HELP YOU A LOT. üôÉüôÉ
===================================================

git init

git config --global user.name '<choose a user name>'
git config --global user.email '<enter a email id>'

git status
git status -s

git log
git log -p -<any number>

git add .
git add -A
git add <file name>

@ COMMIT COMMANDS. 
git commit
git commit -m "<your reason>"
git commit -a -m "<your reason>"

@ COMMAND TO REMOVE FILES FROM GOT REPORITRY. 
git rm <file name> 
UNSTAGE YOUR FILES
git rm --cached <file name>

@ BRANCH RELATED
git branch

git branch <name of new branch>

git branch -d <name of branch>
[Will delete a branch at local level. ]


@ TO CHANGE BRANCHES. 
git checkout <branch name>
git checkout -b <branch name>
git checkout <file name>
git switch <name of a existing branch>


@ MATCH FILES TO THE LAST COMMIT. 
git checkout -f 

git restore <filename>

@ MERGE 2 BARNCHES
git merge <branch name>

@ PUSHING AND PULLING FILES. 
git push -u origin <name of repository>
git push <name of repository>‚ö†Ô∏è
git pull <name of repository>‚ö†Ô∏è
git push 
git pull
git fetch [will pull all branches from remote repository]
git diff <compare file in working tree with staging area>
git diff --stagged <compare the file in staging area with last committed file>
git fetch [pulls all branches from remote reporitry]

@ COMMAND TO PUSH A NEW BRANCH
git push --set-upstream origin <branch name>


===================================================
@ COMMANDS STILL TO UNDERSTAND

restore
Mv 
Rm
Sparse-checkout
Reset
Tag

===================================================


FOR MORE RUN "git help git" COMMAND ON YOUR TERMINAL

===================================================

TERMINOLOGY

‚ö†Ô∏è there might be some exceptions. 

Thanks
